type Profile @model 
@auth(rules: [
  { allow: public, operations: [read], provider: apiKey },
  { allow: owner, operations: [create, update, delete], identityClaim: "sub" }
]) {
  id: ID!
  name: String!
  location: String!
  price: String!
  description: String!
  imageUrls: [String]
  owner: String
}

type Feedback @model 
@auth(rules: [
  { allow: public, operations: [read], provider: apiKey },
  { allow: owner, operations: [create, update, delete], identityClaim: "sub" }
]) {
  id: ID!
  rating: Int!
  comment: String
  profileId: ID!
  owner: String
}

input CreateProfileInput {
  id: ID
  name: String!
  location: String!
  price: String!
  description: String!
  imageUrls: [String] # Match schema
  owner: String
}

input UpdateProfileInput {
  id: ID!
  name: String
  location: String
  price: String
  description: String
  imageUrls: [String] # Match schema
  owner: String
}